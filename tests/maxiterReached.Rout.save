
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## Test for reaching specified maximum of iterations    Author: D.Stekhoven
> ## ========================================================================
> ## Created: 13.05.2011                                  Package: missForest
> library(missForest)
Loading required package: randomForest
randomForest 4.6-6
Type rfNews() to see new features/changes/bug fixes.
> data(esoph)
> set.seed(96)
> esoph.mis <- prodNA(esoph, noNA = 0.1)
> esoph.imp <- missForest(esoph.mis, xtrue = esoph)
  missForest iteration 1 in progress...done!
  missForest iteration 2 in progress...done!
  missForest iteration 3 in progress...done!
  missForest iteration 4 in progress...done!
  missForest iteration 5 in progress...done!
  missForest iteration 6 in progress...done!
> man.err <- mixError(esoph.imp$ximp, esoph.mis, esoph)
> if (man.err[1] == esoph.imp$error[1] & man.err[2] == esoph.imp$error[2]){
+   cat('  no specified maximum number of iterations ... OK\n')
+ } else {
+   stop("manual extracted error is not equal to 'missForest' returned error (but that is not the point here...)!")
+ }
  no specified maximum number of iterations ... OK
> set.seed(96)
> esoph.mis <- prodNA(esoph, noNA = 0.1)
> esoph.imp <- missForest(esoph.mis, xtrue = esoph, maxiter = 3)
  missForest iteration 1 in progress...done!
  missForest iteration 2 in progress...done!
  missForest iteration 3 in progress...done!
> man.err <- mixError(esoph.imp$ximp, esoph.mis, esoph)
> if (man.err[1] == esoph.imp$error[1] & man.err[2] == esoph.imp$error[2]){
+   cat('  errors returned in case of specified maximum number of iterations ... OK\n')
+ } else {
+   stop("in case of specified number of iterations the returned error from 'missForest' is not equal to the manually extracted error using 'mixError'")
+ }
  errors returned in case of specified maximum number of iterations ... OK
> 
> proc.time()
   user  system elapsed 
  1.416   0.072   1.644 
